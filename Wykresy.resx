<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAgUCAQAAAA0AAgEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAABAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAADCQQBAQQCMAsaDp0FDAaFAAAAQwEEAhcBBQIDAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAwkAAAItAAACYAABAmgAAAE3AAIHCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBQMfECgVrzx2UP4waEP9HkUn5AwdEKwBAgFjAQIBKgEF
        AgoBAwEBAAAAAAAAAgEAAAMOAAABOAADCYECEzDQDS5j+A4xaPsEFjfYAAEEYgAECgkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMHBBEJFwyMOHBJ/FGNb/5Lh2n/RIBh/jdx
        Tv4oWjf2FDAazAULBocAAABIAAAAPwAAAFEABQ+SBBg62xA1bvwaRoj/H0+T/iNYnv4jWJ3/CSNN5gAB
        AkoBBQcEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAQICAgcBAQERAQMCHQQLBm4tYTv2U49w/02K
        bP9Oimz/Tops/06KbP9JhWf/P3pa/zBpRP4fSCrpETAr5gomS/ETOnf+HEuO/yFUmP8pY6r/K2ew/zR5
        xv83fsz/KmWs/wofJtIBAgFSAwgECgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBQgCAgIoAQEBVQwMDIUcHBypKSkpvj5P
        QexYeGb+VXhn/lF8Z/5PhGr/Tott/k6Lbf5Oi23/S4ds/jBeXv4UOmL/F0GA/iFUmP4pYqr/MnXB/jyH
        1/5DlOf/PYra/kCP4P5El+v/OIHP/h5IUP8dRSbjAwcEbQMHAxMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAABAAEAAQACAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQkBBAQEIQkJCXY7OzvLgICA86al
        pv61tLT/tra2/rKxsf+qqqr+oqKi/peXl/6IiIj/d316/l94a/47ZWH/Fjtr/h1Nj/4oYqr/MnTA/jyH
        1/5DlOf/RJbp/j+N3v42e8j/LGix/ihiqv4tbLX/HkuG/kN6af9CgF7+JFQw8QYPCIsBBAIhAgUDBAAB
        AAcAAgAOAAIBGAABACUAAQA1AAAARwAAAFsAAABZAwcEFAAAAAAAAAAAAAAAAAAAAAAFBQUoKSkpr5ua
        mvrR0ND/z87O/8nIyP/CwcH/u7q6/7Ozs/+srKz/paWl/6CfoP+bm5v/mZmZ/4qKiv8sQ2f/MnXA/zyH
        1v9DlOf/RJfp/z+N3v82e8n/LGmy/yNXnf8ZRIT/Ezhq/yNKYf85amP/Jjya/1KRcv9RkXH/SIdm/yxi
        PPsMHQ+tAQQCdAUNB4kKGQ2kDyUUuxUyG84cQSXeJlUz7TFqQ/grYDn2BAoFUQAAAAAAAAAAAAAAAA4O
        DgkiIiKVsrGx/tLS0v7T0tL/z87O/snIyP7DwsL/u7u7/rS0tP+trKz+pqam/qCgoP6bm5v/mZmZ/n5+
        fv5kboP/OoTS/j+N3v42fMn/LGmy/iNYnf4YQ4L/ETlo/hBPVv4Vb1D/GXxB/k6Ta/5VlnT/L06X/lOU
        cv9TjG3+Uo9v/k2MbP81cUv+N3ZN/D+DWP9HjmT+T5hv/lajev9cq4P+X6+H/mCvh/8waED0ChcNOAAA
        AAAAAAAAAAAAAAwMDBdtbGzfzc3N/tLR0f7T0tL/zcvK/s7HuP7Sxqj/1MSe/tXDmf/SwJb+yrqV/r2x
        lf6oo5b/l5eX/pCQkP6Cg4T/NUhp/htIiP4XQH//EDtn/g1aWP4Qglb/FKJZ/hSjWP4VllL/E3Y+/kOP
        Xv5WmHX/LUma/leFaf+ZUSn+llkv/mF5W/9aon7+ZLWM/ma2jf9nt47+Z7eO/me3jv9nuI/+aLiP/kGC
        WP4PJBRxEywaAgAAAAAAAAAAAAAAAA0NDR2FhYXxzczM/9PNw//hzqP/7tKO//HTi//x1Iz/8dSM//HT
        jP/x04v/8dOK//HSif/x04n/6MyJ/8i2i/+gm5D/k5OS/4GEjP9fbXD/DbZh/wy3Yf8Ns2D/D65d/xOk
        Vf8agz//Q5Fe/1ebd/8+a4z/HCmp/1WYdv93bU3/rWw4/69rOP+1hFD/u4BM/7F7Tf+GgmD/abmP/2m7
        kf9qvJH/UZlu/xY1HaYUKxoGAAAAAAAAAAAAAAAAAAAAAAkJCSSRkJD3z8S1/u3Oiv7y1Y//8taS/vPX
        lf7z2Jf/89iY/vPYl//z15X+8taS/vLUjv7x04v/8dKJ/vDSiP7v0Yj/wK+H/peVlP5ygXn/Fblh/im4
        aP5AuXT/Vr2A/lmkfv5Lg4T/NViX/h4tqP4gL6j/TYeA/laadv9WmHX+g29N/tiPU//im1v+4ZlY/t6U
        U/+5bEH+bbWM/my/lP9groP+IUwr0hAjFhUAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCyicm5r7376K/vLW
        k/7z2Zn/9Nue/vXcov713qX/9d6m/vXepf/13KL+9Nqe/vPYmP7y1pL/8dSN/vHTif7x0on/8dKJ/ruj
        d/51gXv/ccmZ/mq7oP5PiLX/Lkm5/hYdsP4iM6f/NluX/kuEhv5Znnr/WZ15/liceP9Xm3f+Z7SK/nWn
        gP+IiWf+04NM/st+SP96oHr+bsOW/mq+kf8uZDzvDh8SNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4O
        DiSjoaH847yB//TZm//13KP/9t+q//fisP/45LX/+OS2//jktf/34rH/9uCr//Xdo//02pv/89aU//HU
        jf/x0on/8dKJ/8+qbv9haHj/O2HG/zxjxv9Oh6//XaZ//12lff9cpH3/XKN9/1uifP9aoXv/WZ96/1me
        ef9kson/b8WX/2/Fl/9wwpX/f6B4/3O8kP9wx5n/cMaY/z59Uv0OIRNdFS8cAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA4QDhJ0c3Lf3r2U/vTbof724Kv/+OO0/vnnvP766cL/+urE/vrpw//5573++OS2/vfh
        rf713aP/89ma/vLWkv7x04v/8dKJ/rSTZf5jcnf/WJi0/mGqq/5RjZD/NVqb/lWVhf5dpn7/XaV+/lyk
        ff5conz/WqF7/mCsg/9xyJn+ccma/nHJmv9yypr+csqb/nLLm/9yy5v+T5hr/hMvGZQWLx0EAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABAoFAwIEAkUyTTTmr6eh/uXBkP734a7/+eW5/vrpwv777Mr//O7P/vzt
        zP/76sX++ee8/vfjsv7236j/9Nqe/vPXlf7y1I3/06xt/nx1bv5spIX/d9Og/mi5jf5fqYH/XKOD/ig/
        pf5XmoT/Xqd//l2mfv5dpX7/X6iB/nHJmv9zzZz+c82d/nTOnf90zp3+dM6d/nTPnv9hsoP+HEMlwxIn
        GA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgUCKBc4HsmWd0P/q2c8/52Ohf/VvJ7/79Om//nn
        v//77Mn//O3N//zty//76sX/+ee8//fjsv/236j/9Nue/+nHhv+6nXT/fHdz/4Cfjv+U3rX/iM6n/2Ss
        hP9hq4L/YKuC/1KQiv8qRKP/X6mB/16ogP9eqID/cMeX/3XRn/920Z//dtGf/3bSoP920qD/dtKg/2/H
        lf8pWzXmDh8TJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChgNW2ZtPv7Fbjb/wWw0/r9t
        N/6cakn/nIZ4/q6di/7RvaL/59Gw/uzTrf/t1Kz+6c6i/uHGm/7NtY//qZV7/oV8dP6Xg3H/17SV/vnc
        wf7s4Mz/k72m/ni0k/5kroX/Ya2D/mKugv4eK6z/X6eD/l+qgf5swZP/d9Sh/njUof941aL+eNWi/njV
        ov941qL+dtOg/jp4TPoOIBJLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEyISHSlH
        Jr5vZDP9rGw2/sJwOf7Ccjv/wnQ+/rhzQ/6icEz/l3JW/pt8Zf+oiHD+pohx/qWGbP6yi2v/y5pw/u2w
        e/72uIH/9buF/vW9if7Qo3n/w7yu/oi5nv56tZT/Za+G/lyjh/4gL6v/Yq2C/mm6jf5516P/etij/nrY
        pP962KT+etmk/oXcrP+d47z+Ypx1/hEoFoAWMB0DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACgyGgIiLRcsHTofkE1aMOmPbTr/vXVA/8J4Q//Ce0f/xYBM/+2dYP/0pWf/9Khr//Ss
        cP/1r3T/9bN5//W3ff/1uoH/9r2G/9yse//FnXP/xqB6/8O+sf+Jup7/f7eY/2Okjv8jNar/ZrWJ/3rY
        o/962ab/dsys/3zBuv+Kwcf/reTL/7rs0P+Jvp3/GTwgtBcsHQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYvGQ4fNBxeLUknwG9qO/useUb/4JVZ/uWf
        Yf/XnWH+y5xi/riXX/6rlF7/mY9b/oqJV/56g1P6Z3lL9aGOYv7GnnT/xaF4/sakf/6+wbb/g7mb/oO5
        m/5JY6v/ZZTB/n+zyf6Ovc//n8zS/qDK1f9ycu7+qtzP/p7Xtv8nVTLdFCQYHAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKTYdAyQx
        Gy4kQSORKEYmrCE+IponQSSFIjkfcjFEJ2ArPCJKLDoiOTI+JSMpNB8VISwbGCBBJKmNiF3/xqJ5/8ak
        fP/Hq4z/r8O1/4G5mv+Z17T/qOrE/6jqxf+p68X/qerG/6Lbyv+Am93/e5bW/zRiT/YQIBQ+AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMx
        HgUXMxyEcn5U+8Slff7GpoD/yLOb/rzVxf7N8tr/zPLb/sfy2v6x7cv/oenA/qHowP+g58D+U5Bn/RAk
        FW0XLSECAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAmNiECFisYXlhwSPO/pH3/zq+H/vbSpv741Kj/+dWq/vXYtf7k3cn/udXC/ny4
        kv9Xlmz+FjQcnxgvHgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJTchARgoGD1BYjzlj5dr/32OYf5ed07uP1w50CRE
        J7AiQSeSIz8ncShELk8hPikuHDYjBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkNCAWJTojNC8+
        KBUuPicFMUQrAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA//j/8///AAD/8B/A//8AAP/wAgB//wAA/+AAAD//AAD+AAAAH/8AAPgAAAAP8wAA4AAAAAAB
        AADgAAAAAAEAAMAAAAAAAQAAwAAAAAABAADAAAAAAAMAAMAAAAAABwAAwAAAAAAPAADAAAAAAA8AAMAA
        AAAAHwAAgAAAAAA/AACAAAAAAH8AAIAAAAAA/wAAgAAAAAD/AADAAAAAAf8AAPgAAAAD/wAA/gAAAAf/
        AAD///AAB/8AAP//+AAP/wAA///8AB//AAD///8H//8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>